[
  {
    "objectID": "assignment1_final.html",
    "href": "assignment1_final.html",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "",
    "text": "library(tidyverse) library(tidycensus) library(knitr) library(stringr)\ncensus_api_key(Sys.getenv(“e195d3b46a99d2c4f9250dbc870202be7aaf8a2b”), install = FALSE, overwrite = FALSE)\nmy_state &lt;- “NJ” my_year &lt;- 2022\nnj_data &lt;- get_acs( geography = “county”, variables = c(total_pop = “B01003_001”, median_income = “B19013_001”), state = my_state, year = my_year, output = “wide” )\nnj_reliability &lt;- nj_data %&gt;% mutate( county_name = NAME %&gt;% str_remove(“, New Jersey”) %&gt;% str_remove(” County”), moe_percentage = 100 * median_incomeM / median_incomeE, reliability = case_when( moe_percentage &lt; 5 ~ “High Confidence”, moe_percentage &lt;= 10 ~ “Moderate”, moe_percentage &gt; 10 ~ “Low Confidence” ) )\ntop5 &lt;- nj_reliability %&gt;% mutate(moe_pct = 100 * median_incomeM / median_incomeE) %&gt;% arrange(desc(moe_pct)) %&gt;% slice_head(n = 5) %&gt;% transmute( county_name, median_income = median_incomeE, margin_of_error = median_incomeM, MOE % = sprintf(“%.2f%%”, moe_pct), Reliability Category = reliability )\nknitr::kable(top5, caption = “Top 5 NJ Counties with Highest MOE Percentage”, col.names = c(“County”, “Median Income”, “Margin of Error”, “MOE %”, “Reliability Category”), format.args = list(big.mark = “,”) )\nselected_counties &lt;- nj_reliability %&gt;% filter(county_name %in% c(“Somerset”, “Essex”, “Middlesex”)) %&gt;% mutate(moe_pct = 100 * median_incomeM / median_incomeE) %&gt;% transmute( county_name, median_income = median_incomeE, MOE % = sprintf(“%.2f%%”, moe_pct), Reliability Category = reliability )\nknitr::kable(selected_counties, caption = “Selected Counties for Tract-Level Study”, col.names = c(“County”, “Median Income”, “MOE %”, “Reliability Category”), format.args = list(big.mark = “,”) )\nrace_vars &lt;- c( total = “B03002_001”, white = “B03002_003”, black = “B03002_004”, hispanic = “B03002_012” )\ntract_demo &lt;- get_acs( geography = “tract”, state = my_state, county = c(“035”, “013”, “023”), year = my_year, variables = race_vars, output = “wide” )\nnj_counties &lt;- tidycensus::fips_codes %&gt;% filter(state_code == “34”) %&gt;% distinct(county_code, county) %&gt;% rename(county_name = county)\ntract_demo &lt;- tract_demo %&gt;% mutate(county_code = substr(GEOID, 3, 5)) %&gt;% left_join(nj_counties, by = “county_code”) %&gt;% select(-county_code) %&gt;% mutate( pct_white = if_else(totalE &gt; 0, 100 * whiteE / totalE, NA_real_), pct_black = if_else(totalE &gt; 0, 100 * blackE / totalE, NA_real_), pct_hispanic = if_else(totalE &gt; 0, 100 * hispanicE / totalE, NA_real_) )\ntop_hispanic_tract &lt;- tract_demo %&gt;% filter(!is.na(pct_hispanic)) %&gt;% arrange(desc(pct_hispanic)) %&gt;% slice_head(n = 1) %&gt;% transmute( Tract = NAME, County = county_name, Hispanic % = sprintf(“%.2f%%”, pct_hispanic) )\nknitr::kable(top_hispanic_tract, caption = “Tract with Highest Percent Hispanic/Latino (Selected NJ Counties)” )\ncounty_avgs &lt;- tract_demo %&gt;% group_by(county_name) %&gt;% summarise( n_tracts = n(), avg_white = mean(pct_white, na.rm = TRUE), avg_black = mean(pct_black, na.rm = TRUE), avg_hispanic = mean(pct_hispanic, na.rm = TRUE), .groups = “drop” ) %&gt;% arrange(desc(avg_hispanic)) %&gt;% transmute( county_name, n_tracts, Avg White % = sprintf(“%.2f%%”, avg_white), Avg Black % = sprintf(“%.2f%%”, avg_black), Avg Hispanic % = sprintf(“%.2f%%”, avg_hispanic) )\nknitr::kable(county_avgs, caption = “Average Tract Demographics by County (Simple Averages of Tract %s)”, col.names = c(“County”, “# Tracts”, “Avg White %”, “Avg Black %”, “Avg Hispanic %”) )\ndemographic_moe &lt;- tract_demo %&gt;% mutate( white_moe_pct = if_else(whiteE &gt; 0, 100 * whiteM / whiteE, NA_real_), black_moe_pct = if_else(blackE &gt; 0, 100 * blackM / blackE, NA_real_), hispanic_moe_pct = if_else(hispanicE &gt; 0, 100 * hispanicM / hispanicE, NA_real_), any_high_moe = pmax(white_moe_pct, black_moe_pct, hispanic_moe_pct, na.rm = TRUE) &gt; 15 )\noverall_moe_summary &lt;- demographic_moe %&gt;% summarise( total_tracts = n(), tracts_high_moe = sum(any_high_moe, na.rm = TRUE), pct_high_moe = 100 * tracts_high_moe / total_tracts, avg_white_moe = mean(white_moe_pct, na.rm = TRUE), avg_black_moe = mean(black_moe_pct, na.rm = TRUE), avg_hispanic_moe = mean(hispanic_moe_pct, na.rm = TRUE) )\nknitr::kable(overall_moe_summary, caption = “Overall MOE Summary (Tract-Level)”, col.names = c(“Total Tracts”, “Tracts with High MOE (&gt;15%)”, “% High MOE”, “Avg White MOE %”, “Avg Black MOE %”, “Avg Hispanic MOE %”) )\nby_county_moe_summary &lt;- demographic_moe %&gt;% group_by(county_name) %&gt;% summarise( n_tracts = n(), tracts_high_moe = sum(any_high_moe, na.rm = TRUE), pct_high_moe = 100 * tracts_high_moe / n_tracts, avg_white_moe = mean(white_moe_pct, na.rm = TRUE), avg_black_moe = mean(black_moe_pct, na.rm = TRUE), avg_hispanic_moe = mean(hispanic_moe_pct, na.rm = TRUE), .groups = “drop” ) %&gt;% arrange(desc(pct_high_moe))\nknitr::kable(by_county_moe_summary, caption = “MOE Summary by County (Tract-Level)”, col.names = c(“County”, “# Tracts”, “# High MOE Tracts”, “% High MOE”, “Avg White MOE %”, “Avg Black MOE %”, “Avg Hispanic MOE %”) )\npattern_summary &lt;- demographic_moe %&gt;% group_by(any_high_moe) %&gt;% summarise( n_tracts = n(), avg_population = mean(totalE, na.rm = TRUE), avg_white_pct = mean(pct_white, na.rm = TRUE), avg_black_pct = mean(pct_black, na.rm = TRUE), avg_hisp_pct = mean(pct_hispanic, na.rm = TRUE), .groups = “drop” ) %&gt;% mutate( MOE Group = if_else(any_high_moe, “High MOE (≥15% any group)”, “Low MOE (&lt;15%)”) ) %&gt;% select(MOE Group, n_tracts, avg_population, avg_white_pct, avg_black_pct, avg_hisp_pct)\nknitr::kable(pattern_summary, caption = “Comparison of Tracts by Data Quality (High vs. Low MOE)”, col.names = c(“MOE Group”, “Number of Tracts”, “Avg Population”, “Avg White %”, “Avg Black %”, “Avg Hispanic %”), format.args = list(big.mark = “,”, digits = 2) )"
  }
]